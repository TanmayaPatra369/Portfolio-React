--- ## 📌 Project Overview
A modern, interactive single-page portfolio website built with React, TypeScript, and TailwindCSS, designed to showcase a developer’s skills, projects, education, and experience with smooth animations and responsive design.

--- ## 🧱 Tech Stack
Frontend

React + TypeScript
TailwindCSS
Framer Motion (animations)
React Hook Form + Zod (form handling + validation)
Lucide React (icons)
shadcn/ui (UI components)
Backend

Express.js + Node.js
Drizzle ORM
PostgreSQL (in-memory currently)
--- ## 🎨 Theming System
Light Theme: Green accents on white background
Dark Theme: Red accents on black background
CSS variables for dynamic theming
Theme toggle + localStorage persistence
Auto-detect system theme
--- ## ✨ Features
Navigation

Fixed header, smooth scroll, mobile menu, active link highlighting
Animations

Section fade-ins, slide-ins, hover effects, skill progress bars
Responsive Design

Mobile-first, layout adaptations, touch-friendly elements
Sections

Home: Headline, social links, CTA
About: Intro, education, experience, certifications, values
Skills: Categorized with icons and animated bars
Projects: Cards with hover, tech tags, GitHub/demo links
Contact: Contact info, social links, validated form with toast
Form Handling

React Hook Form + Zod, error states, loading & success feedback
Accessibility

Semantic HTML, ARIA labels, keyboard nav, color contrast
--- ## 📁 Folder Highlights

portfolio-website/
├── client/src/
│   ├── components/ (layout, ui, main portfolio)
│   ├── data/ (about, skills, projects)
│   ├── hooks/ (responsive, toast)
│   ├── lib/ (utils, queryClient)
│   ├── App.tsx / main.tsx
├── server/ (API, routes, storage)
├── shared/ (schema.ts)
--- ## 🛠 Implementation Notes
Animations: Framer Motion + Intersection Observer
Responsive: Tailwind breakpoints + custom hooks
Form: Modular inputs + validation schema
Theming: Context + CSS vars + persistent state
Performance: Hardware-accelerated animations, optimized assets
Type Safety: Full TypeScript usage
Content Management: Decoupled data files for easy updates
--- ## ✅ Conclusion
A production-ready, performant, and responsive portfolio with modern design, solid backend, and best practices in accessibility, animation, and architecture.

---